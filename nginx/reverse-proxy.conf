# nginx/reverse-proxy.conf - Main Nginx Reverse Proxy Configuration
upstream backend {
    server backend:8000;
}

upstream frontend {
    server frontend:80;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=health:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;

# CORS origin allowlist using map directive - single source of truth
map $http_origin $cors_allowed_origin {
    default "";
    "~^http://localhost:5173$"          $http_origin;
    "~^https://oracletrader\.app$"      $http_origin;
    "~^https://www\.oracletrader\.app$" $http_origin;
}

server {
    listen 80;
    server_name localhost;

    # Client max body size
    client_max_body_size 10M;

    # Proxy timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Common proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Security headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # API routes - Backend
    location /api/ {
        # Handle CORS preflight (OPTIONS) requests at nginx level
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin $cors_allowed_origin always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
            add_header Access-Control-Expose-Headers "X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After" always;
            add_header Access-Control-Max-Age "600" always;
            add_header Content-Length "0" always;
            add_header Content-Type "text/plain" always;
            return 204;
        }

        # Apply rate limiting based on endpoint for actual requests
        location ~ ^/api/v1/health/ {
            limit_req zone=health burst=5 nodelay;
            proxy_pass http://backend;
        }
        
        location ~ ^/api/v1/settings {
            limit_req zone=api burst=2 nodelay;
            proxy_pass http://backend;
        }
        
        # General API endpoints
        limit_req zone=general burst=10 nodelay;
        proxy_pass http://backend;
        
        # API specific headers
        proxy_set_header Content-Type application/json;
        
        # Do NOT add Access-Control-* headers here for actual requests
        # Let FastAPI CORSMiddleware handle CORS for non-OPTIONS requests
    }

    # WebSocket support (if needed)
    location /ws/ {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # OpenAPI/Swagger docs
    location ~ ^/(docs|openapi\.json|redoc) {
        proxy_pass http://backend;
    }

    # Main application - Frontend
    location / {
        proxy_pass http://frontend;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Global health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Disable logging for common files
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        proxy_pass http://frontend;
    }

    location = /robots.txt {
        log_not_found off;
        access_log off;
        proxy_pass http://frontend;
    }

    # Error handling
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}
