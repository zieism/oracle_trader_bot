# Default values for oracle-trader.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  repository: oracle-trader
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8001"
  prometheus.io/path: "/metrics"

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8000
  metricsPort: 8001

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: api.oracle-trader.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: oracle-trader-tls
      hosts:
        - api.oracle-trader.example.com

resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 250m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Environment configuration
environment: production

# Database configuration
database:
  host: postgres-service
  port: 5432
  name: oracle_trader
  user: trader
  password: ""  # Set via secret

# Redis configuration
redis:
  url: redis://redis-service:6379

# Exchange API configuration
exchanges:
  binance:
    enabled: true
    testnet: false
  coinbase:
    enabled: true
    sandbox: false
  kraken:
    enabled: true

# Trading configuration
trading:
  symbols:
    - "BTC/USDT:USDT"
    - "ETH/USDT:USDT"
  timeframe: "1h"
  maxConcurrentTrades: 3
  fixedUsdAmount: 100.0
  leverage: 5

# Monitoring configuration
monitoring:
  prometheus:
    enabled: true
    port: 8001
  grafana:
    enabled: true
    url: http://grafana:3000

# Security
secrets:
  create: true
  # All sensitive values should be provided via external secret management